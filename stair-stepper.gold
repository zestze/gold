
func print_num(int num) void {
	print(sprint("%d", num));
}

func main () int {
	int dim = 8;
	int board_size = dim * dim;
	int k;
	//background
	int bkg = 1;
	//foreground 
	int frg = 8;
	//Player
	int plr = 4;

	int [64] board;

	for (k = 0; k < dim * dim; k = k + 1) {
		board[k] = bkg;
	}

	srand();
	int p_spot = dim * (dim-1) + 3; //3 is arbitrary
	board[p_spot] = plr;

	int i;
	int j;
	int arr_len = dim * dim;
	bool collide = false;
	bool victory = false;
	for (k = 0; collide == false && victory == false; k = k +1) {
		

		//Shifting blocks down
		for(i = dim-1; i > 0; i = i - 1) {
			for (j=0; j < dim; j = j + 1) {
				int spot_above = (i-1)*dim + j;
				int spot = i * dim + j;
				if (board[spot_above] == frg)	{
					if (board[spot] == plr) {
						collide = true;
					}
					board[spot] = frg;
				} else {
					if (board[spot] != plr) {
						board[spot] = bkg;
					}
				}
			}
		}

		int change_spot = rand() % dim;
	
		//Changing top row
		for(i = 0; i < dim; i = i+1) {
			if (i == change_spot) {
				board[i] = frg;
			} else {
				board[i] = bkg;
			}
		}
	

		//PRINTING BOARD
		println("CLIMB THE STAIRS TO YOUR LEFT!");
		for(i = 0; i < dim && collide == false; i = i + 1) {
			print("| ");
			for(j = 0; j < dim; j = j + 1) {
				int spot = (i * dim) + j;
				print_num(board[spot]);
				print(" ");
			}
			println("|");
		}


		//GETTING PLAYER INPUT
		if (collide == false) {
			print("Move (2=l,3=r):  ");
			int move = atoi(input());
			println("");
		
			board[p_spot] = bkg;
			if(move == 2) {
				p_spot = p_spot - 1;
			} 
			if(move == 3 && p_spot != (dim * dim - 1)) {
				p_spot = p_spot + 1;
			}
			if (board[p_spot] == frg) {
				collide = true;
			} else {
				board[p_spot] = plr;
				if (p_spot == 0) {
					victory = true;
				}
			}
		}	
	}

	if (victory == true) {
		println(sprint("CONGRATULATIONS  -  YOU HAVE WON IN  %i  MOVES!", k));
	} else {
		string c_spot = sprint("Collision in: (left-to-right, top-to-bottom) (%i, %i)", (p_spot % dim + 1), (p_spot / dim + 1));
		println(c_spot);
		println(sprint("GAME OVER  -  %d ROWS TO GO!", (p_spot / dim) + 1));
	}
	return 0;
}
